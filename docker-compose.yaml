version: '3.8'
services:
  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.2
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      XPACK_MONITORING_ENABLED: "false"
    ports:
      - "5044:5044"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  topics:
    image: apache/kafka:latest
    command: > 
      bash -c "
      /opt/kafka/bin/kafka-topics.sh --create --topic pipe --bootstrap-server broker:9092
      "
    depends_on:
      - broker

  spark:
    build:
      context: .  # Imposta il contesto di costruzione al livello superiore
      dockerfile: streaming/Dockerfile
    hostname: spark
    container_name: spark
    ports:
      - 5404:5404
    volumes:
      - ./data_volume:/home/spark/data_volume
      - ./tmp:/tmp  # Monta ./tmp per mantenere la cache delle dipendenze di Ivy
      - ./streaming/code/streaming.py:/home/spark/streaming.py
    command: > 
      /opt/spark/bin/spark-submit --conf spark.driver.extraJavaOptions="-Divy.cache.dir=/tmp -Divy.home=/tmp" --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.2,org.elasticsearch:elasticsearch-spark-30_2.12:8.13.4,  /home/spark/streaming.py
    depends_on:
      topics:
        condition: service_completed_successfully

 
  elasticsearch:   
    container_name: elasticsearch 
    image: elasticsearch:8.13.4
    ports:
      - 9200:9200
    volumes:
      - ./data_elastic:/usr/share/elasticsearch/data
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    deploy:
      resources:
        limits:
          memory: 1GB
    depends_on:
      - topics
        

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_started
  
  kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      depends_on:
        - zookeeper
        - broker
        
      ports:
        - "8080:8080"
      restart: always
      environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  data_volume:
#    driver: local
#    driver_opts:
#      type: 'bind'
#      o: 'bind'
#      device: '/home/anto/Documenti/magistrale/tap/progetto_sp/data/'
  spark-logs:
  